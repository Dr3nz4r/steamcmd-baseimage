# This workflow will build a docker container, publish it to Google Container Registry, and deploy it to GKE when a release is created
#
# To configure this workflow:
#
# 1. Ensure that your repository contains the necessary configuration for your Google Kubernetes Engine cluster, including deployment.yml, kustomization.yml, service.yml, etc.
#
# 2. Set up secrets in your workspace: GKE_PROJECT with the name of the project and GKE_SA_KEY with the Base64 encoded JSON service account key (https://github.com/GoogleCloudPlatform/github-actions/tree/docs/service-account-key/setup-gcloud#inputs).
#
# 3. Change the values for the GKE_ZONE, GKE_CLUSTER, IMAGE, and DEPLOYMENT_NAME environment variables (below).
#
# For more support on how to run the workflow, please visit https://github.com/google-github-actions/setup-gcloud/tree/master/example-workflows/gke

name: Publish Docker Image

on:
  workflow_dispatch:
  release:
    types: [created]

jobs:
  push:
    name: Push
    runs-on: ubuntu-20.04

    steps:
      - name: Code Checkout
        uses: actions/checkout@v2

      - name: Docker Meta
        id: docker_meta
        uses: crazy-max/ghaction-docker-meta@v1
        with:
          images: ghcr.io/Dr3nz4r/steamcmd-baseimage

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1

      - name: Install buildx
        uses: docker/setup-buildx-action@v1
        with:
          version: v0.5.1

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.REGISTRY_TOKEN }}

      - name: Get Build Information
        id: build_info
        run: |
          echo "::set-output name=version_tag::${GITHUB_REF/refs\/tags\//}"
          echo "::set-output name=short_sha::$(git rev-parse --short HEAD)"

      - name: Release Production Build
        uses: docker/build-push-action@v2.2.2
        with:
          build-args: |
            VERSION=${{ steps.build_info.outputs.version_tag }}
          labels: ${{ steps.docker_meta.outputs.labels }}
          push: true
          tags: ${{ steps.docker_meta.outputs.tags }}
          github-token:: ${{ secrets.REGISTRY_TOKEN }}
